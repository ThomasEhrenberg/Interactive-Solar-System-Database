# Interactive Solar System Database
# Thomas Ehrenberg
# December 2021

def frontPage():
	print("\n" "Our database contains information about many of the major celestial objects which make up our Solar System." "\n" "Please enter the number of one of the following categories." "\n")
	print("[1] The Sun")
	print("[2] Planets")
	print("[3] Asteroid Belt")
	print("[4] Dwarf Planets")
	print("[5] Exit" "\n")
	
	n = input()

	if n=="1":
		Sun()

	elif n=="2":
		Planets()

	elif n=="3":
		Asteroids()

	elif n=="4":
		Dwarf_Planets()

	elif n=="5":
		print("\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n")
		print("Thank you for using the ENAE380 Interactive Solar System Database. Goodbye!")
		print("\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n""\n")
	
	else:
		print("\n ""Please select a valid input.")
		frontPage()

planetList = ["[1] Mercury", "[2] Venus", "[3] Earth", "[4] Mars", "[5] Jupiter", "[6] Saturn", "[7] Uranus", "[8] Neptune", "[9] Back to home page", "\n"]
mercuryData = ["\n", "Mass (x10^24 kg) = 0.330", "Radius (km) = 2,440", "Average density (kg/m^3) = 5,427", "Average surface temperature (degrees C) = 167", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 3.7", "Escape velocity, from surface (km/s) = 4.3", "Average distance to the Sun (x10^6 km) = 57.9", "Periapsis (x10^6 km) = 46.0", "Apoapsis (x10^6 km) = 69.8", "Orbital period (days) = 88.0", "Orbital speed (km/s) = 47.4", "Orbital inclination (degrees) = 7.0", "Orbital eccentricity (unitless) = 0.205", "Number of moons = 0", "\n"]
venusData = ["\n", "Mass (x10^24 kg) = 4.87", "Radius (km) = 6,052", "Average density (kg/m^3) = 5,243", "Average surface temperature (degrees C) = 464", "Average surface pressure (atms) = 90.8", "Acceleration due to gravity, at surface (m/s^2) = 8.9", "Escape velocity, from surface and without atmospheric drag (km/s) = 10.4", "Average distance to the Sun (x10^6 km) = 108.2", "Periapsis (x10^6 km) = 107.5", "Apoapsis (x10^6 km) = 108.9", "Orbital period (days) = 224.7", "Orbital speed (km/s) = 35.0", "Orbital inclination (degrees) = 3.4", "Orbital eccentricity (unitless) = 0.007", "Number of moons = 0", "\n"]
earthData = ["\n", "Mass (x10^24 kg) = 5.97", "Radius (km) = 6,378", "Average density (kg/m^3) = 5,514", "Average surface temperature (degrees C) = 15", "Average surface pressure (atms) = 1", "Acceleration due to gravity, at surface (m/s^2) = 9.8", "Escape velocity, from surface and without atmospheric drag (km/s) = 11.2", "Average distance to the Sun (x10^6 km) = 149.6", "Periapsis (x10^6 km) = 147.1", "Apoapsis (x10^6 km) = 152.1", "Orbital period (days) = 365.2", "Orbital speed (km/s) = 29.8", "Orbital inclination (degrees) = 0.0", "Orbital eccentricity (unitless) = 0.017", "Number of moons = 1", "\n"]
earthmoonList = ["[1] The Moon", "[2] Return to list of planets", "\n"]
moonData = ["\n", "Mass (x10^24 kg) = 0.073", "Radius (km) = 1,738", "Average density (kg/m^3) = 3,340", "Average surface temperature (degrees C) = -20", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 1.6", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.4", "Average distance to Earth (x10^6 km) = 0.384", "Periapsis (x10^6 km) = 0.363", "Apoapsis (x10^6 km) = 0.406", "Orbital period (days) = 27.3", "Orbital speed (km/s) = 1.0", "Orbital inclination (degrees) = 5.1", "Orbital eccentricity (unitless) = 0.055", "\n"]
marsData = ["\n", "Mass (x10^24 kg) = 0.642", "Radius (km) = 3,396", "Average density (kg/m^3) = 3,933", "Average surface temperature (degrees C) = -65", "Average surface pressure (atms) = 0.0099", "Acceleration due to gravity, at surface (m/s^2) = 3.7", "Escape velocity, from surface and without atmospheric drag (km/s) = 5.0", "Average distance to the Sun (x10^6 km) = 227.9", "Periapsis (x10^6 km) = 206.6", "Apoapsis (x10^6 km) = 249.2", "Orbital period (days) = 687.0", "Orbital speed (km/s) = 24.1", "Orbital inclination (degrees) = 1.9", "Orbital eccentricity (unitless) = 0.094", "Number of moons = 2", "\n"]
marsmoonList = ["[1] Deimos", "[2] Phobos", "[3] Return to list of planets", "\n"]
deimosData = ["\n", "Mass (x10^15 kg) = 1.476", "Average radius (km) = 6.2", "Average density (kg/m^3) = 1,471", "Average surface temperature (degrees C) = -40", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.003", "Escape velocity, from surface (m/s) = 5.56", "Average distance to Mars (km) = 23,463", "Periapsis (km) = 23,456", "Apoapsis (km) = 23,471", "Orbital period (days) = 1.26", "Orbital speed (km/s) = 1.35", "Orbital inclination (degrees) = 0.93", "Orbital eccentricity (unitless) = 0.00033", "\n"]
phobosData = ["\n", "Mass (x10^15 kg) = 10.66", "Average radius (km) = 11.3", "Average density (kg/m^3) = 1,876", "Average surface temperature (degrees C) = -40", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.0057", "Escape velocity, from surface (m/s) = 11.39", "Average distance to Mars (km) = 9,376", "Periapsis (km) = 9,237", "Apoapsis (km) = 9,518", "Orbital period (days) = 0.318", "Orbital speed (km/s) = 2.14", "Orbital inclination (degrees) = 1.093", "Orbital eccentricity (unitless) = 0.0151", "\n"]
jupiterData = ["\n", "Mass (x10^24 kg) = 1,898", "Radius (km) = 71,492", "Average density (kg/m^3) = 1,326", "Average temperature where pressure = 1 bar (degrees C) = -110", "Average surface pressure (atms) = N/A (no surface)", "Acceleration due to gravity, at the altitude where pressure = 1 bar (m/s^2) = 23.1", "Escape velocity, from altitude where pressure = 1 bar and without atmospheric drag (km/s) = 59.5", "Average distance to the Sun (x10^6 km) = 778.6", "Periapsis (x10^6 km) = 740.5", "Apoapsis (x10^6 km) = 816.6", "Orbital period (days) = 4,331", "Orbital speed (km/s) = 13.1", "Orbital inclination (degrees) = 1.3", "Orbital eccentricity (unitless) = 0.049", "Number of moons = 79", "\n"]
jupitermoonList = ["[1] Ganymede", "[2] Callisto", "[3] Io", "[4] Europa", "[5] Return to list of planets", "\n"]
ganymedeData = ["\n", "Mass (x10^24 kg) = 0.148", "Radius (km) = 2,634", "Average density (kg/m^3) = 1,936", "Average surface temperature (degrees C) = -163", "Average surface pressure (micropascals) = 0.70", "Acceleration due to gravity, at surface (m/s^2) = 1.43", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.74", "Average distance to Jupiter (x10^6 km) = 1.070", "Periapsis (x10^6 km) = 1.069", "Apoapsis (x10^6 km) = 1.071", "Orbital period (days) = 7.15", "Orbital speed (km/s) = 10.88", "Orbital inclination (degrees) = 0.20", "Orbital eccentricity (unitless) = 0.0013", "\n"]
callistoData = ["\n", "Mass (x10^24 kg) = 0.108", "Radius (km) = 2,410", "Average density (kg/m^3) = 1,834", "Average surface temperature (degrees C) = -134", "Average surface pressure (micropascals) = 0.75", "Acceleration due to gravity, at surface (m/s^2) = 1.24", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.44", "Average distance to Jupiter (x10^6 km) = 1.883", "Periapsis (x10^6 km) = 1.869", "Apoapsis (x10^6 km) = 1.897", "Orbital period (days) = 16.69", "Orbital speed (km/s) = 8.20", "Orbital inclination (degrees) = 0.192", "Orbital eccentricity (unitless) = 0.0074", "\n"]
ioData = ["\n", "Mass (x10^24 kg) = 0.0893", "Radius (km) = 1,822", "Average density (kg/m^3) = 3,528", "Average surface temperature (degrees C) = -163", "Average surface pressure (millipascals) = 4", "Acceleration due to gravity, at surface (m/s^2) = 1.80", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.56", "Average distance to Jupiter (x10^6 km) = 0.422", "Periapsis (x10^6 km) = 0.420", "Apoapsis (x10^6 km) = 0.423", "Orbital period (days) = 1.77", "Orbital speed (km/s) = 17.33", "Orbital inclination (degrees) = 0.05", "Orbital eccentricity (unitless) = 0.0041", "\n"]
europaData = ["\n", "Mass (x10^24 kg) = 0.0480", "Radius (km) = 1,561", "Average density (kg/m^3) = 3,013", "Average surface temperature (degrees C) = -171", "Average surface pressure (micropascals) = 0.1", "Acceleration due to gravity, at surface (m/s^2) = 1.31", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.03", "Average distance to Jupiter (x10^6 km) = 0.671", "Periapsis (x10^6 km) = 0.665", "Apoapsis (x10^6 km) = 0.677", "Orbital period (days) = 3.55", "Orbital speed (km/s) = 13.74", "Orbital inclination (degrees) = 0.47", "Orbital eccentricity (unitless) = 0.0090", "\n"]
saturnData = ["\n", "Mass (x10^24 kg) = 568", "Radius (km) = 60,268", "Average density (kg/m^3) = 687", "Average temperature where pressure = 1 bar (degrees C) = -140", "Average surface pressure (atms) = N/A (no surface)", "Acceleration due to gravity, at the altitude where pressure = 1 bar (m/s^2) = 9.0", "Escape velocity, from altitude where pressure = 1 bar and without atmospheric drag (km/s) = 35.5", "Average distance to the Sun (x10^6 km) = 1,433.5", "Periapsis (x10^6 km) = 1,352.6", "Apoapsis (x10^6 km) = 1,514.5", "Orbital period (days) = 10,747", "Orbital speed (km/s) = 9.7", "Orbital inclination (degrees) = 2.5", "Orbital eccentricity (unitless) = 0.057", "Number of moons = 83", "\n"]
saturnmoonList = ["[1] Titan", "[2] Rhea", "[3] Iapetus", "[4] Dione", "[5] Tethys", "[6] Enceladus", "[7] Mimas", "[8] Return to list of planets", "\n"]
titanData = ["\n", "Mass (x10^24 kg) = 0.135", "Radius (km) = 2,574", "Average density (kg/m^3) = 1,880", "Average surface temperature (degrees C) = -180", "Average surface pressure (atms) = 1.45", "Acceleration due to gravity, at surface (m/s^2) = 1.35", "Escape velocity, from surface and without atmospheric drag (km/s) = 2.64", "Average distance to Saturn (x10^6 km) = 1.222", "Periapsis (x10^6 km) = 1.187", "Apoapsis (x10^6 km) = 1.257", "Orbital period (days) = 15.95", "Orbital speed (km/s) = 5.57", "Orbital inclination (degrees) = 0.349", "Orbital eccentricity (unitless) = 0.0288", "\n"]
rheaData = ["\n", "Mass (x10^21 kg) = 2.307", "Radius (km) = 763.8", "Average density (kg/m^3) = 1,236", "Average surface temperature (degrees C) = -197", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.264", "Escape velocity, from surface (km/s) = 0.635", "Average distance to Saturn (x10^6 km) = 0.527", "Orbital period (days) = 4.52", "Orbital speed (km/s) = 8.48", "Orbital inclination (degrees) = 0.345", "Orbital eccentricity (unitless) = 0.00123", "\n"]
iapetusData = ["\n", "Mass (x10^21 kg) = 1.806", "Radius (km) = 734.5", "Average density (kg/m^3) = 1,088", "Average surface temperature (degrees C) = -163", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.223", "Escape velocity, from surface (km/s) = 0.573", "Average distance to Saturn (x10^6 km) = 3.561", "Orbital period (days) = 79.32", "Orbital speed (km/s) = 3.26", "Orbital inclination (degrees) = 15.47", "Orbital eccentricity (unitless) = 0.0277", "\n"]
dioneData = ["\n", "Mass (x10^21 kg) = 1.095", "Radius (km) = 561.4", "Average density (kg/m^3) = 1,478", "Average surface temperature (degrees C) = -186", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.232", "Escape velocity, from surface (km/s) = 0.51", "Average distance to Saturn (x10^6 km) = 0.377", "Orbital period (days) = 2.74", "Orbital inclination (degrees) = 0.019", "Orbital eccentricity (unitless) = 0.0022", "\n"]
tethysData = ["\n", "Mass (x10^21 kg) = 0.617", "Radius (km) = 531.1", "Average density (kg/m^3) = 984", "Average surface temperature (degrees C) = -187", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.146", "Escape velocity, from surface (km/s) = 0.394", "Average distance to Saturn (x10^6 km) = 0.295", "Orbital period (days) = 1.89", "Orbital speed (km/s) = 11.35", "Orbital inclination (degrees) = 1.12", "Orbital eccentricity (unitless) = 0.0001", "\n"]
enceladusData = ["\n", "Mass (x10^21 kg) = 0.108", "Radius (km) = 252.1", "Average density (kg/m^3) = 1,609", "Average surface temperature (degrees C) = -198", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.113", "Escape velocity, from surface (km/s) = 0.239", "Average distance to Saturn (x10^6 km) = 0.238", "Orbital period (days) = 1.37", "Orbital inclination (degrees) = 0.009", "Orbital eccentricity (unitless) = 0.0047", "\n"]
mimasData = ["\n", "Mass (x10^18 kg) = 37.5", "Radius (km) = 198.2", "Average density (kg/m^3) = 1,148", "Average surface temperature (degrees C) = -209", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.064", "Escape velocity, from surface (km/s) = 0.159", "Average distance to Saturn (x10^6 km) = 0.186", "Periapsis (x10^6 km) = 0.182", "Apoapsis (x10^6 km) = 0.189", "Orbital period (days) = 0.94", "Orbital speed (km/s) = 14.28", "Orbital inclination (degrees) = 1.57", "Orbital eccentricity (unitless) = 0.0196", "\n"]
uranusData = ["\n", "Mass (x10^24 kg) = 86.8", "Radius (km) = 25,559", "Average density (kg/m^3) = 1,271", "Average temperature where pressure = 1 bar (degrees C) = -195", "Average surface pressure (atms) = N/A (no surface)", "Acceleration due to gravity, at the altitude where pressure = 1 bar (m/s^2) = 8.7", "Escape velocity, from altitude where pressure = 1 bar and without atmospheric drag (km/s) = 21.3", "Average distance to the Sun (x10^6 km) = 2,872.5", "Periapsis (x10^6 km) = 2,741.3", "Apoapsis (x10^6 km) = 3,003.6", "Orbital period (days) = 30,589", "Orbital speed (km/s) = 6.8", "Orbital inclination (degrees) = 0.8", "Orbital eccentricity (unitless) = 0.046", "Number of moons = 27", "\n"]
uranusmoonList = ["[1] Titania", "[2] Oberon", "[3] Umbirel", "[4] Ariel", "[5] Miranda", "[6] Return to list of planets", "\n"]
titaniaData = ["\n", "Mass (x10^21 kg) = 3.40", "Radius (km) = 788.4", "Average density (kg/m^3) = 1,711", "Average surface temperature (degrees C) = -203", "Average surface pressure (millipascals) = 2.0", "Acceleration due to gravity, at surface (m/s^2) = 0.365", "Escape velocity, from surface and without atmospheric drag (km/s) = 0.759", "Average distance from Uranus (x10^6 km) = 0.436", "Orbital period (days) = 8.71", "Orbital speed (km/s) = 3.64", "Orbital inclination (degrees) = 0.34", "Orbital eccentricity (unitless) = 0.0011", "\n"]
oberonData = ["\n", "Mass (x10^21 kg) = 3.076", "Radius (km) = 761.4", "Average density (kg/m^3) = 1,630", "Average surface temperature (degrees C) = -198", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.354", "Escape velocity, from surface (km/s) = 0.734", "Average distance from Uranus (x10^6 km) = 0.584", "Orbital period (days) = 13.46", "Orbital speed (km/s) = 3.15", "Orbital inclination (degrees) = 0.058", "Orbital eccentricity (unitless) = 0.0014", "\n"]
umbrielData = ["\n", "Mass (x10^21 kg) = 1.275", "Radius (km) = 584.7", "Average density (kg/m^3) = 1,390", "Average surface temperature (degrees C) = -198", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.250", "Escape velocity, from surface and without atmospheric drag (km/s) = 0.540", "Average distance from Uranus (x10^6 km) = 0.266", "Orbital period (days) = 4.14", "Orbital speed (km/s) = 4.67", "Orbital inclination (degrees) = 0.128", "Orbital eccentricity (unitless) = 0.0039", "\n"]
arielData = ["\n", "Mass (x10^21 kg) = 1.251", "Radius (km) = 578.9", "Average density (kg/m^3) = 1,592", "Average surface temperature (degrees C) = -213", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.249", "Escape velocity, from surface (km/s) = 0.537", "Average distance from Uranus (x10^6 km) = 0.191", "Orbital period (days) = 2.52", "Orbital speed (km/s) = 5.51", "Orbital inclination (degrees) = 0.260", "Orbital eccentricity (unitless) = 0.0012", "\n"]
mirandaData = ["\n", "Mass (x10^18 kg) = 64.0", "Radius (km) = 235.8", "Average density (kg/m^3) = 1,200", "Average surface temperature (degrees C) = -213", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.077", "Escape velocity, from surface (km/s) = 0.190", "Average distance from Uranus (x10^6 km) = 0.129", "Orbital period (days) = 1.41", "Orbital speed (km/s) = 6.66", "Orbital inclination (degrees) = 4.23", "Orbital eccentricity (unitless) = 0.0013", "\n"]
neptuneData = ["\n", "Mass (x10^24 kg) = 102", "Radius (km) = 24,764", "Average density (kg/m^3) = 1,638", "Average temperature where pressure = 1 bar (degrees C) = -200", "Average surface pressure (atms) = N/A (no surface)", "Acceleration due to gravity, at the altitude where pressure = 1 bar (m/s^2) = 11.0", "Escape velocity, from altitude where pressure = 1 bar and without atmospheric drag (km/s) = 23.5", "Average distance to the Sun (x10^6 km) = 4,495.1", "Periapsis (x10^6 km) = 4,444.5", "Apoapsis (x10^6 km) = 4,545.7", "Orbital period (days) = 59,800", "Orbital speed (km/s) = 5.4", "Orbital inclination (degrees) = 1.8", "Orbital eccentricity (unitless) = 0.011", "Number of moons = 14", "\n"]
neptunemoonList = ["[1] Triton", "[2] Return to list of planets", "\n"]
tritonData = ["\n", "Mass (x10^21 kg) = 21.39", "Radius (km) = 1,353", "Average density (kg/m^3) = 2,061", "Average surface temperature (degrees C) = -235", "Average surface pressure (pascals) = 1.65", "Acceleration due to gravity, at surface (m/s^2) = 0.779", "Escape velocity, from surface and without atmospheric drag (km/s) = 1.455", "Average distance from Uranus (x10^6 km) = 0.355", "Orbital period (days) = 5.88", "Orbital speed (km/s) = 4.39", "Orbital inclination (degrees) = 156.9", "Orbital eccentricity (unitless) = 0.000016", "\n"]

asteroidList = ["[1] Ceres", "[2] Vesta", "[3] Pallas", "[4] Hygiea", "[5] Back to home page", "\n"]
ceresData = ["\n", "Mass (x10^21 kg) = 0.938", "Radius (km) = 469.7", "Average density (kg/m^3) = 2,162", "Average surface temperature (degrees C) = -101", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, from surface (m/s^2) = 0.280", "Escape velocity, from surface and without atmospheric drag (km/s) = 0.510", "Average distance to the Sun (x10^6 km) = 414", "Periapsis (x10^6 km) = 381", "Apoapsis (x10^6 km) = 446", "Orbital period (days) = 467", "Orbital speed (km/s) = 17.9", "Orbital inclination (degrees) = 10.6", "Orbital eccentricity (unitless) = 0.0785", "\n"]
vestaData = ["\n", "Mass (x10^21 kg) = 0.259", "Radius (km) = 262.7", "Average density (kg/m^3) = 3,456", "Average surface temperature (degrees C) = -111", "Average surface pressure (atms) = 0", "Acceleration due to gravity, from surface (m/s^2) = 0.250", "Escape velocity, from surface (km/s) = 0.360", "Average distance to the Sun (x10^6 km) = 353", "Periapsis (x10^6 km) = 321", "Apoapsis (x10^6 km) = 384", "Orbital period (days) = 1,326", "Orbital speed (km/s) = 19.34", "Orbital inclination (degrees) = 7.14", "Orbital eccentricity (unitless) = 0.08874", "\n"]
pallasData = ["\n", "Mass (x10^21 kg) = 0.201", "Radius (km) = 256.0", "Average density (kg/m^3) = 2,890", "Average surface pressure (atms) = 0", "Acceleration due to gravity, from surface (m/s^2) = 0.210", "Escape velocity, from surface (km/s) = 0.324", "Average distance to the Sun (x10^6 km) = 414", "Periapsis (x10^6 km) = 320", "Apoapsis (x10^6 km) = 510", "Orbital period (days) = 1,687", "Orbital inclination (degrees) = 34.9", "Orbital eccentricity (unitless) = 0.2298", "\n"]
hygieaData = ["\n", "Mass (x10^18 kg) = 87.4", "Radius (km) = 216.5", "Average density (kg/m^3) = 20,60", "Average surface temperature (degrees C) = -109", "Average surface pressure (atms) = 0", "Acceleration due to gravity, from surface (m/s^2) = 0.091", "Escape velocity, from surface (km/s) = 0.210", "Average distance to the Sun (x10^6 km) = 470", "Periapsis (x10^6 km) = 417", "Apoapsis (x10^6 km) = 523", "Orbital period (days) = 2,033", "Orbital speed (km/s) = 16.76", "Orbital inclination (degrees) = 3.83", "Orbital eccentricity (unitless) = 0.1125", "\n"]

dwarfplanetList = ["[1] Pluto", "[2] Ceres", "[3] Eris", "[4] Haumea", "[5] Makemake", "[6] Back to home page", "\n"]
plutoData = ["\n", "Mass (x10^21 kg) = 13.03", "Radius (km) = 1,188", "Average density (kg/m^3) = 1,854", "Average surface temperature (degrees C) = -229", "Average surface pressure (pascals) = 1.0", "Acceleration due to gravity, at surface (m/s^2) = 0.620", "Escape velocity, from surface and without atmospheric drag (km/s) = 1.212", "Average distance to the Sun (x10^6 km) = 5,906", "Periapsis (x10^6 km) = 4,437", "Apoapsis (x10^6 km) = 7,376", "Orbital period (days) = 90,560", "Orbital speed (km/s) = 4.743", "Orbital inclination (degrees) = 17.16", "Orbital eccentricity (unitless) = 0.2488", "Number of moons = 5", "\n"]
erisData = ["\n", "Mass (x10^21 kg) = 16.47", "Radius (km) = 1,163", "Average density (kg/m^3) = 2,430", "Average surface temperature (degrees C) = -231", "Average surface pressure (pascals) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.820", "Escape velocity, from surface (km/s) = 1.38", "Average distance to the Sun (x10^6 km) = 10,152", "Periapsis (x10^6 km) = 5,725", "Apoapsis (x10^6 km) = 14,579", "Orbital period (days) = 204,199", "Orbital speed (km/s) = 3.434", "Orbital inclination (degrees) = 44.040", "Orbital eccentricity (unitless) = 0.43607", "Number of moons = 1", "\n"]
haumeaData = ["\n", "Mass (x10^21 kg) = 4.006", "Radius (km) = 780", "Average density (kg/m^3) = 2,018", "Average surface temperature (degrees C) = -223", "Average surface pressure (atms) = 0", "Acceleration due to gravity, at surface (m/s^2) = 0.242", "Escape velocity, from surface (km/s) = 0.714", "Average distance to the Sun (x10^6 km) = 6,450", "Periapsis (x10^6 km) = 5,183", "Apoapsis (x10^6 km) = 7,717", "Orbital period (days) = 103,410", "Orbital speed (km/s) = 4.531", "Orbital inclination (degrees) = 28.21", "Orbital eccentricity (unitless) = 0.19642", "Number of moons = 2", "\n"]
makemakeData = ["\n", "Mass (x10^21 kg) = 3.10", "Radius (km) = 739", "Average density (kg/m^3) = 2,100", "Average surface temperature (degrees C) = -233", "Average surface pressure (atms) = ~0, insignificant", "Acceleration due to gravity, at surface (m/s^2) = 0.570", "Escape velocity, from surface and without atmospheric drag (km/s) = 0.910", "Average distance to the Sun (x10^6 km) = 6,796", "Periapsis (x10^6 km) = 5,700", "Apoapsis (x10^6 km) = 7,892", "Orbital period (days) = 111,845", "Orbital speed (km/s) = 4.419", "Orbital inclination (degrees) = 28.98", "Orbital eccentricity (unitless) = 0.16126", "Number of moons = 1", "\n"]

sunData = ["\n", "Mass (x10^30 kg) = 1.989", "Radius (km) = 695,700", "Average density (kg/m^3) = 1,408", "Core temperature (x10^6 Kelvin) = 15.7", "Surface temperature (Kelvin) = 5,772", "Acceleration due to gravity, at surface (m/s^2) = 274", "Escape velocity, from surface (km/s) = 617.7", "Distance to the galactic center (x10^15 km) = 270", "Galactic travel period (x10^6 years) = 250", "Orbital speed, relative to the galactic center (km/s) = 251", "Orbital inclination, relative to the galactic plane (degrees) = 67.23", "\n"]

def Planets():
	print("\n" "There are eight (8) major planets in our Solar System. Please type in the number associated with the planet you would like to learn about." "\n")

	for planet in planetList:
		print(planet)
		
	print("\n")

	p = input()

	if p=="1":
		Mercury()

	elif p=="2":
		Venus()

	elif p=="3":
		Earth()

	elif p=="4":
		Mars()

	elif p=="5":
		Jupiter()

	elif p=="6":
		Saturn()

	elif p=="7":
		Uranus()

	elif p=="8":
		Neptune()

	elif p=="9":
		frontPage()

	else:
		print("\n" "Please select a valid input.")
		Planets()

def Mercury():
	print("\n" "MERCURY")
	for hermes in (mercuryData):
		print(hermes)
	print("Mercury is the smallest major planet in the Solar System." "\n" "It is visible to the naked eye and its proximity to the Sun leads to wild temperature variations on the light and dark sides." "\n" "Mercury hosts no moons and its heavily cratered surface suggests little geological activity.", "\n")
	input("Press the enter key to continue." "\n")
	Planets()

def Venus():
	print("\n" "VENUS")
	for aphrodite in venusData:
		print(aphrodite)
	print("Venus is home to an extremely hostile environment on its surface." "\n" "Composed of carbon dioxide and sulfuric acid, Venus' atmosphere exists at 90 times the pressure of Earth's at a temperature of about 740 Kelvin, more than hot enough to melt lead." "\n" "Venus rotates opposite relative to Earth, meaning that the Sun rises in the West and sets in the East." "\n")
	input("Press the enter key to continue." "\n")
	Planets()

def Earth():
	print("\n" "EARTH")
	for gaea in earthData:
		print(gaea)
	print("Earth is our home. The only Solar System object known to harbor life, Earth possesses perfect surface conditions needed to sustain life." "\n" "Everything we know, and everything we have known, has been here on Earth. Only recently in human history have we ventured beyond our atmosphere to the frontier of space." "\n" "Earth also features one natural satellite, appropriately named The Moon." "\n")
	
	for a in earthmoonList:
		print(a)

	b = input()	
	if b == "1":
		Moon()
	
	elif b == "2":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Earth()

def Moon():
	print("\n" "THE MOON")
	for luna in moonData:
		print(luna)
	print("The Moon has been a beacon in the night since the dawn of the Solar system." "\n" "Humanity first set foot on the Moon in 1969, and plans are in place to return humankind to the Moon within the end of the decade." "\n" "Our Moon is Earth's one and only natural satellite, with the largest planet-to-satellite mass ratio in the Solar system." "\n" "Our Moon is also geologically active, with a shifting surface creating the endless cliff on the lunar surface, as well as low-energy moonquakes." "\n")
	input("Press the enter key to continue." "\n")
	Planets()

def Mars():
	print("\n" "MARS")
	for ares in marsData:
		print(ares)

	print("Mars is the red desert planet fourth from the Sun. Humanity has visited Mars in the form of robotic probes and rovers over the decades, and plans are in place for the first human to set foot on Mars in the near future." "\n" "Iron oxide in the soil gives Mars its red surface, a surface previously thought to be covered in red vines upon first telescopic observation." "\n" "Mars is home to both the one of largest canyons and the tallest mountain in the Solar system: Valles Marineris and Olympus Mons, respectively." "\n" "Mars has two moons, both included in the database below." "\n")

	for a in marsmoonList:
		print(a)

	b = input()	
	if b == "1":
		Deimos()
	
	elif b == "2":
		Phobos()
	
	elif b == "3":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Mars()

def Phobos():
	print("\n" "PHOBOS")
	for fear in phobosData:
		print(fear)
	print("Phobos, as well as its twin Deimos, were discovered within a week of one another by Asaph Hall in 1877." "\n" "Phobos is believed to be a loose collection of smaller space rocks and with a decaying orbit," "\n" "Phobos will enter the Martian atmosphere and either impact the surface, or break up into Mars' first ring." "\n")
	input("Press the enter key to continue." "\n")
	Mars()

def Deimos():
	print("\n" "DEIMOS")
	for dread in deimosData:
		print(dread)
	print("Deimos, as well as its twin Phobos, were discovered within a week of one another by Asaph Hall in 1877." "\n")
	input("Press the enter key to continue." "\n")
	Mars()

def Jupiter():
	print("\n" "JUPITER")
	for zeus in jupiterData:
		print(zeus)
	print("Jupiter is the largest planet, and derives its name from the Roman king of the gods." "\n" "Jupiter, the king planet, is approximately two and a half times the mass of all of the other planets combined." "\n" "Jupiter's immense gravity well acts like a net for capturing asteroids and comets headed for the inner Solar system, objects which could potentially pose a threat to life on Earth." "\n" "Jupiter has 79 moons. The four largest, discovered by Galileo Galilei, are named the Galilean moons and are catalogued below." "\n")

	for a in jupitermoonList:
		print(a)

	b = input()	
	if b == "1":
		Ganymede()
	
	elif b == "2":
		Callisto()
	
	elif b == "3":
		Io()
	
	elif b == "4":
		Europa()
	
	elif b == "5":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Jupiter()

def Ganymede():
	print("\n" "GANYMEDE")
	for catamitus in ganymedeData:
		print(catamitus)
	print("Ganymede is the largest moon in the Solar system. Larger than the planet Mercury, Ganymede is the only known moon to possess a magnetic field." "\n" "Ganymede also is home to a massive subsurface saltwater ocean, estimated to contain more water than on Earth." "\n")
	input("Press the enter key to continue." "\n")
	Jupiter()

def Callisto():
	print("\n" "CALLISTO")
	for kallisto in callistoData:
		print(kallisto)
	print("Callisto features the most heavily cratered surface in the Solar sytem, suggesting geological inactivity." "\n" "However, recent research suggests an underwater ocean similar to Ganymede." "\n")
	input("Press the enter key to continue." "\n")
	Jupiter()

def Io():
	print("\n" "IO")
	for phoronis in ioData:
		print(phoronis)
	print("Io is the most volcanic object in the Solar system. These volcanos spit sulfur from beneath Io's crust, creating a thin atmosphere on the moon." "\n")
	input("Press the enter key to continue." "\n")
	Jupiter()

def Europa():
	print("\n" "EUROPA")
	for euro in europaData:
		print(euro)
	print("Europa is believed to have a massive subsurface ocean containing over twice the amount of water than there is on Earth." "\n" "This water is also theorized to contain organic elements, which may form the building blocks of extraterrestrial life." "\n")
	input("Press the enter key to continue." "\n")
	Jupiter()

def Saturn():
	print("\n" "SATURN")
	for kronos in saturnData:
		print(kronos)
	print("The most prominent part of Saturn is arguably its ring system. Its rings are the most visible and pronounced out of all of the planets with smaller ring systems." "\n" "The rings are home to many of Saturn's moons and are composed of mainly water ice." "\n" "Like its outer Solar system siblings, Saturn is a gas giant, and with a density of much less than 1,000 kg/m^3, Saturn would float in water if given a large enough pool." "\n" "Saturn harbors eighty three known moons. The seven largest are included below." "\n")

	for a in saturnmoonList:
		print(a)

	b = input()	
	
	if b == "1":
		Titan()
	
	elif b == "2":
		Rhea()
	
	elif b == "3":
		Iapetus()
	
	elif b == "4":
		Dione()
	
	elif b == "5":
		Tethys()
	
	elif b == "6":
		Enceladus()
	
	elif b == "7":
		Mimas()
	
	elif b == "8":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Saturn()

def Titan():
	print("\n" "TITAN")
	for titanes in titanData:
		print(titanes)
	print("Titan is Saturn's largest moon and the second largest in the Solar system."  "\n" "Titan hosts an atmosphere existing at one and a half times the pressure of Earth's, the only moon known to possess such an atmosphere." "\n" "Titan is also frigid, cold enough for liquid methane to settle on the surface in seas and lakes." "\n" "The largest of these lakes is the Kraken Mare, five times the surface area of Lake Superior here on Earth." "\n")
	input("Press the enter key to continue." "\n")
	Saturn()

def Rhea():
	print("\n" "RHEA")
	for ops in rheaData:
		print(ops)
	input("Press the enter key to continue." "\n")
	Saturn()

def Iapetus():
	print("\n" "IAPETUS")
	for japetus in iapetusData:
		print(japetus)
	input("Press the enter key to continue." "\n")
	Saturn()

def Dione():
	print("\n" "DIONE")
	for diana in dioneData:
		print(diana)
	input("Press the enter key to continue." "\n")
	Saturn()

def Tethys():
	print("\n" "TETHYS")
	for teth in tethysData:
		print(teth)
	input("Press the enter key to continue." "\n")
	Saturn()

def Enceladus():
	print("\n" "ENCELADUS")
	for enkelados in enceladusData:
		print(enkelados)
	print("Enceladus, like many other outer Solar system moons, is home to a subsurface ocean." "\n" "Hydrothermal activity on the planet creates plumes of water which spray into space." "\n" "This water has been sampled and found to contain organic chemicals, the building blocks for life, making Enceladus a prime target for research into extraterrestrial life." "\n")
	input("Press the enter key to continue." "\n")
	Saturn()

def Mimas():
	print("\n" "MIMAS")
	for mimon in mimasData:
		print(mimon)
	print("Mimas stands out in the fact that it is the smallest object in the Solar system to have a naturally round shape, formed by gravity." "\n" "Mimas also has a massive crater named Herschel. This crater is so distinct that it lends Mimas a similar appearance to the Death Star." "\n")
	input("Press the enter key to continue." "\n")
	Saturn()

def Uranus():
	print("\n" "URANUS")
	for ouranos in uranusData:
		print(ouranos)
	print("Uranus is visible to the naked eye, however, it has historically been mistaken as a star." "\n" "William Herschel studied Uranus and, with the help of a telescope, was able to differentiate it from the background stars and classify it as a planet." "\n" "Uranus features an axial tilt which almost lines its poles up with the plane of its orbit around the Sun." "\n" "In other words, Uranus rotates on its side. There are many conflicting theories on how this tilt occurred, but nevertheless, Uranus' axial tilt is unique." "\n" "Uranus has twenty seven known moons. The largest five are catalogued below." "\n")

	for a in uranusmoonList:
		print(a)

	b = input()	
	if b == "1":
		Titania()
	
	elif b == "2":
		Oberon()
	
	elif b == "3":
		Umbriel()
	
	elif b == "4":
		Ariel()
	
	elif b == "5":
		Miranda()
	
	elif b == "6":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Uranus()

def Titania():
	print("\n" "TITANIA")
	for fairy in titaniaData:
		print(fairy)
	input("Press the enter key to continue." "\n")
	Uranus()

def Oberon():
	print("\n" "OBERON")
	for alberich in oberonData:
		print(alberich)
	input("Press the enter key to continue." "\n")
	Uranus()

def Umbriel():
	print("\n" "UMBRIEL")
	for umbra in umbrielData:
		print(umbra)
	input("Press the enter key to continue." "\n")
	Uranus()

def Ariel():
	print("\n" "ARIEL")
	for sylph in arielData:
		print(sylph)
	input("Press the enter key to continue." "\n")
	Uranus()

def Miranda():
	print("\n" "MIRANDA")
	for tempest in mirandaData:
		print(tempest)
	print("Miranda is the smallest of Uranus' round inner moons." "\n" "Miranda features a broken-looking surface, suggesting heavy geological activity in the past." "\n" "Miranda is also home to the tallest cliff in the Solar system, the Verona Rupes, standing at an astounding 20 kilometers in altitude." "\n")
	input("Press the enter key to continue." "\n")
	Uranus()

def Neptune():
	print("\n" "NEPTUNE")
	for poseidon in neptuneData:
		print(poseidon)
	print("Neptune hosts a violent and active atmosphere, complete with storms and ice mixed in with the dense gas atmosphere." "\n" "Neptune is the farthest major planet from the Sun, and directly interacts with the Kuiper belt, the region of space just outside the reach of the major planets." "\n" "Neptune's influence on the Kuiper belt has led many to believe that its moon are captured Kuiper belt objects." "\n" "Neptune has 14 known moons. Triton, the largest, is catalogued here." "\n")

	for a in neptunemoonList:
		print(a)

	b = input()	
	if b == "1":
		Triton()
	
	elif b == "2":
		Planets()
	
	else:
		print("\n" "Please select a valid input.")
		Neptune()

def Triton():
	print("\n" "TRITON")
	for trumpeter in tritonData:
		print(trumpeter)
	print("Triton is the largest moon of Neptune." "\n" "It possesses many odd characteristics which has led to the theory that it was once a dwarf planet, captured by Neptune's gravity from the Kuiper belt." "\n" "These characteristics include: a composition similar to Pluto, another dwarf planet, and its retrograde orbit around Neptune." "\n" "Triton orbits in a direction opposite Neptune's rotation, the largest moon to do so." "\n")
	input("Press the enter key to continue." "\n")
	Neptune()

def Asteroids():
	print("\n" "There are between 1.1 and 1.9 million asteroids in the asteroid belt larger than 1 kilometer in diameter, with countless other pieces of rocky material scattered in the belt." "\n" "The four largest asteroids are catalogued in this database. These four alone make up approximately 62 percent of the mass of the entire asteroid belt." "\n" "Note that the asteroid Ceres is large enough to be classified as a dwarf planet, so it is documented in the dwarf planet list as well." "\n" "Please type in the number associated with the asteroid you would like to learn about." "\n")

	for asteroid in asteroidList:
		print(asteroid)

	print("\n")

	p = input()

	if p=="1":
		Ceres_asteroid()

	elif p=="2":
		Vesta()

	elif p=="3":
		Pallas()

	elif p=="4":
		Hygiea()

	elif p=="5":
		frontPage()

	else:
		print("\n" "Please select a valid input.")
		Asteroids()

def Ceres_asteroid():
	print("\n" "CERES")
	for demeter in ceresData:
		print(demeter)
	print("Ceres is the largest asteroid in the belt. Its size has lead it to become classified as a dwarf planet." "\n" "Ceres was once thought of as a major planet itself, but when dozen more objects in the asteroid belt were discovered, Ceres was finally determined to be an impressively-sized asteroid." "\n")
	input("Press the enter key to continue." "\n")
	Asteroids()

def Vesta():
	print("\n" "VESTA")
	for hestia in vestaData:
		print(hestia)
	input("Press the enter key to continue." "\n")
	Asteroids()

def Pallas():
	print("\n" "PALLAS")
	for giant in pallasData:
		print(giant)
	input("Press the enter key to continue." "\n")
	Asteroids()

def Hygiea():
	print("\n" "HYGIEA")
	for salus in hygieaData:
		print(salus)
	input("Press the enter key to continue." "\n")
	Asteroids()

def Dwarf_Planets():
	print("\n" "Dwarf planets are Solar system objects which display typical planetary features but those which are smaller than the classical eight major planets." "\n" "The five largest dwarf planets are listed below. Note that Ceres is catalogued as both an asteroid and a dwarf planet." "\n" "Please type in the number associated with the dwarf planet you would like to learn about." "\n")

	for dwarfplanet in dwarfplanetList:
		print(dwarfplanet)
	
	print("\n")

	p = input()

	if p=="1":
		Pluto()

	elif p=="2":
		Ceres_dwarf_planet()

	elif p=="3":
		Eris()

	elif p=="4":
		Haumea()

	elif p=="5":
		Makemake()

	elif p=="6":
		frontPage()
	
	else:
		print("\n" "Please select a valid input.")
		Dwarf_Planets()

def Ceres_dwarf_planet():
	print("\n" "CERES")
	for demeter in ceresData:
		print(demeter)
	print("Ceres is the largest asteroid in the belt. Its size has lead it to become classified as a dwarf planet." "\n" "Ceres was once thought of as a major planet itself, but when dozen more objects in the asteroid belt were discovered, Ceres was finally determined to be an impressively-sized asteroid." "\n")
	input("Press the enter key to continue." "\n")
	Dwarf_Planets()

def Pluto():
	print("\n" "PLUTO")
	for hades in plutoData:
		print(hades)
	print("Once classified as a major planet, Pluto was reclassified as a dwarf planet in 2006." "\n" "Pluto is the host for five known moons, the largest of which is Charon." "\n" "Charon's mass compared to Pluto leads to them sharing a barycenter near their midpoint."  "\n" "In other words, Charon and Pluto appear to orbit each other." "\n")
	input("Press the enter key to continue." "\n")
	Dwarf_Planets()

def Eris():
	print("\n" "ERIS")
	for discordia in erisData:
		print(discordia)
	input("Press the enter key to continue." "\n")
	Dwarf_Planets()

def Haumea():
	print("\n" "HAUMEA")
	for makalei in haumeaData:
		print(makalei)
	input("Press the enter key to continue." "\n")
	Dwarf_Planets()

def Makemake():
	print("\n" "MAKEMAKE")
	for birdman in makemakeData:
		print(birdman)
	input("Press the enter key to continue." "\n")
	Dwarf_Planets()

def Sun():
	print("\n" "THE SUN")
	for sol in sunData:
		print(sol)
	print("\n" "The Sun is a G-type main-sequence star around which all Solar system objects orbit." "\n" "Since the formation of the Solar system, the Sun has provided heat, light, and orbital stability for the entire Solar system, allowing for life to thrive here on Earth." "\n" "The Sun has been worshipped for thousands of years as a bringer of life, or perhaps a deity itself." "\n")

	input("Press the enter key to continue." "\n")
	frontPage()

print("\n" "Welcome to the Interactive Solar System Database!" "\n" "In this interactive database, you can select an object to gather information about it." "\n")
input("Press the enter key to continue." "\n")
frontPage()
